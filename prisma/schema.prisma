generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String
  password  String
  role      String   @default("student")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  attempts    QuizAttempt[]
  assignments QuizAssignment[]
}

model Quiz {
  id            String   @id @default(uuid())
  title         String
  description   String
  duration      Int
  questionsCount Int
  status        String   @default("draft")
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  settings      Json

  // Relations
  questions   Question[]
  attempts    QuizAttempt[]
  assignments QuizAssignment[]
}

model Question {
  id           String   @id @default(uuid())
  quizId       String
  text         String
  options      String   // JSON array
  correctAnswer Int
  explanation  String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  // Relations
  quiz Quiz @relation(fields: [quizId], references: [id], onDelete: Cascade)
}

model QuizAttempt {
  id            String    @id @default(uuid())
  quizId        String
  userId        String
  answers       String    // JSON array
  score         Float?
  timeSpent     Int
  remainingTime Int?
  status        String    @default("in-progress")
  startedAt     DateTime  @default(now())
  completedAt   DateTime?

  // Relations
  quiz Quiz @relation(fields: [quizId], references: [id], onDelete: Cascade)
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model QuizAssignment {
  id        String   @id @default(uuid())
  quizId    String
  userId    String
  createdAt DateTime @default(now())

  // Relations
  quiz Quiz @relation(fields: [quizId], references: [id], onDelete: Cascade)
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([quizId, userId])
}